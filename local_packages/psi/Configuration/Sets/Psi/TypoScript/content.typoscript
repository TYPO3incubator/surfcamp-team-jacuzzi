# Returns number of content elements for a given colPos
# Usage: {f:cObject(typoscriptObjectPath: 'lib.hasContent', data: '{colPos: 0}')}
lib.hasContent = TEXT
lib.hasContent.numRows {
  table = tt_content
  select.where = colPos = {field:colPos}
  select.where.insertData = 1
}

# Adds content elements for a given colPos
# Usage: {f:cObject(typoscriptObjectPath: 'lib.dynamicContent', data: '{colPos: 0, slide: "-1", max: '1'}')}
lib.dynamicContent = CONTENT
lib.dynamicContent {
  table = tt_content
  select {
    orderBy = sorting
    where = colPos = {field:colPos}
    where.insertData = 1
    max.field = max
  }
  slide.field = slide
}

lib.contentElement >
lib.contentElement = FLUIDTEMPLATE
lib.contentElement {
    templateName = Default
    templateRootPaths {
        0 = EXT:psi/Resources/Private/Templates/
    }
    partialRootPaths {
        0 = EXT:psi/Resources/Private/Templates/Partials/
    }
    layoutRootPaths {
        0 = EXT:psi/Resources/Private/Templates/Layouts/
    }
}

tt_content.menu_subpages.dataProcessing {
  10 = menu
  10 {
    special = directory
    special.value.field = pages
    dataProcessing {
      10 = files
      10.references.fieldName = media
    }
  }
}

tt_content.menu_section.dataProcessing {
   10 = menu
   10 {
       // Always activate includeNotInMenu for a section menu of the current page
       includeNotInMenu.override = 1
       includeNotInMenu.override.if.isFalse.field = pages
       special = list
       special {
           value {
               field = pages
               override {
                   data = page:uid
                   if {
                       isFalse.field = pages
                   }

                   // Currrent page uses content of another page
                   override {
                       data = page:content_from_pid
                       if {
                           isTrue.data = page:content_from_pid
                       }
                   }
               }
           }
       }
       dataProcessing {
           10 = files
           10 {
               references.fieldName = media
           }
           20 = database-query
           20 {
               table = tt_content
               pidInList.field = uid
               as = content
               where = {#sectionIndex} = 1
               orderBy = sorting
               dataProcessing {
                   10 = files
                   10 {
                       references.fieldName = image
                   }
               }
           }
       }
   }
}


